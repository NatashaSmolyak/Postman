{
	"info": {
		"_postman_id": "b53639a5-ef54-4888-ba38-0e4f4acdb16a",
		"name": "Home_Work-2_Nata_Smolyak",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23528871"
	},
	"item": [
		{
			"name": "Task 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//В переменной MyData находится recponse, преобразованный в файл формата JSON (спарсить response body в json )\r",
							"let MyData = pm.response.json();\r",
							"\r",
							"pm.test(\"Name from Response = Name from Request\", function () {\r",
							"        pm.expect(MyData.name).to.eql(\"Natasha\");\r",
							"});\r",
							"\r",
							"pm.test(\"Age from Response = Age from Request\", function () {\r",
							"       pm.expect(MyData.age).to.eql(\"50\");\r",
							"});\r",
							"\r",
							"pm.test(\"Salary from Response = Salary from Request\", function () {\r",
							"        pm.expect(MyData.salary).to.eql(5000);\r",
							"});\r",
							"\r",
							"let req=request.data\r",
							"let req_name=req.name\r",
							"let req_age=req.age\r",
							"//Знак+ показывает преобразование к числовому типу данных \r",
							"let req_salary=+req.salary\r",
							"\r",
							"pm.test(\"Name from Response = Name from Request\", function () {\r",
							"       pm.expect(MyData.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age from Response = Age from Request\", function () {\r",
							"        pm.expect(MyData.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary from Response = Salary from Request\", function () {\r",
							"       pm.expect(MyData.salary).to.eql(req_salary);\r",
							"});\r",
							"console.log(MyData.family);\r",
							"console.log(\"Children= \"+ MyData.family.children)\r",
							"\r",
							"let resp_salary_1_5_year=req_salary*4\r",
							"pm.test(\"Salary 1_5 year from Response = Salary * 4 from Request\", function () {\r",
							"        pm.expect(MyData.family.u_salary_1_5_year).to.eql(resp_salary_1_5_year);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Natasha",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						},
						{
							"key": "age",
							"value": "50",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Task 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"let requestData = pm.request.url.query.toObject()\r",
							"\r",
							"let req_name=requestData.name\r",
							"let req_age=requestData.age\r",
							"let req_salary=+requestData.salary\r",
							"\r",
							"pm.test(\"Name from Response = Name from Request\", function () {\r",
							"        pm.expect(responseData.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age from Response = Age from Request\", function () {\r",
							"        pm.expect(responseData.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary from Response = Salary from Request\", function () {\r",
							"        pm.expect(responseData.salary).to.eql(req_salary);\r",
							"});\r",
							"console.log(responseData.family)\r",
							"\r",
							"pm.test(\"The Dog parameter has a Name parameter\", function () {\r",
							"       pm.expect(responseData.family.pets.dog).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"The Dog parameter has an Age parameter\", function () {\r",
							"   pm.expect(responseData.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"pm.test(\"The Dog name is Luky\", function () {\r",
							"      pm.expect(responseData.family.pets.dog.name).to.eql(\"Luky\")\r",
							"});\r",
							"\r",
							"pm.test(\"The Dog  is 4 years old\", function () {\r",
							"    var responseData = pm.response.json();\r",
							"   pm.expect(responseData.family.pets.dog.age).to.eql(4)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Natasha&age=50&salary=5000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Natasha"
						},
						{
							"key": "age",
							"value": "50"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Task 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"let requestData = pm.request.url.query.toObject()\r",
							"\r",
							"let req_name=requestData.name\r",
							"let req_age=+requestData.age\r",
							"let req_salary=+requestData.salary\r",
							"\r",
							"pm.test(\"Name from Response = Name from Request\", function () {\r",
							"        pm.expect(responseData.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age from Response = Age from Request\", function () {\r",
							"        pm.expect(responseData.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"console.log(\"Salary from Request: \"+ requestData.salary);\r",
							"\r",
							"console.log(\"Salary from Response: \"+ responseData.salary);\r",
							"\r",
							"console.log(\"Salary [0] from Response: \"+ responseData.salary[0]);\r",
							"\r",
							"console.log(\"Salary [1] from Response: \"+ responseData.salary[1]);\r",
							"\r",
							"console.log(\"Salary [2] from Response: \"+ responseData.salary[2]);\r",
							"\r",
							"pm.test(\"Salary [0] from Response = Salary from Request\", function () {\r",
							"    pm.expect(responseData.salary[0]).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary [1] from Response = Salary from Request*2\", function () {\r",
							"    pm.expect(+responseData.salary[1]).to.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Salary [2] from Response = Salary from Request*3\", function () {\r",
							"    pm.expect(+responseData.salary[2]).to.eql(req_salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", req_name);\r",
							"pm.environment.set(\"age\", req_age);\r",
							"pm.environment.set(\"salary\", req_salary);\r",
							"\r",
							"console.log(\"Salary output with a loop\")\r",
							"for  (i=0; i<3;i++)\r",
							"{console.log(\"Salary [\"+i+\"]:\"+responseData.salary[i]);\r",
							"};\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Task 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let responseData = pm.response.json();\r",
							"let requestData = request.data\r",
							"let req_name=requestData.name;\r",
							"let req_age=+requestData.age;\r",
							"let req_salary=+requestData.salary;\r",
							"\r",
							"pm.test(\"JSON response has 'start_qa_salary' parameter\", function () {\r",
							"    pm.expect(responseData).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"pm.test(\"JSON response has 'qa_salary_after_6_months' parameter\", function () {\r",
							"    pm.expect(responseData).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"JSON response has 'qa_salary_after_12_months' parameter\", function () {\r",
							"    pm.expect(responseData).to.have.property (\"qa_salary_after_12_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"JSON response has 'qa_salary_after_1.5_year' parameter\", function () {\r",
							"    pm.expect(responseData).to.have.property (\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"pm.test(\"JSON response has 'qa_salary_after_3.5_years' parameter\", function () {\r",
							"    pm.expect(responseData).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"\r",
							"pm.test(\"JSON response has 'Pesson' parameter\", function () {\r",
							"    pm.expect(responseData).to.have.property(\"person\")\r",
							"});\r",
							"\r",
							"pm.test(\"Start_qa_salary from Response = Salary from Request\", function () {\r",
							"    pm.expect(responseData.start_qa_salary).to.eql(req_salary)\r",
							"});\r",
							"\r",
							"pm.test(\"Qa_salary_after_6_months from Response = Salary * 2 из Request\", function () {\r",
							"    pm.expect(responseData.qa_salary_after_6_months).to.eql(+req_salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Qa_salary_after_12_months from Response = Salary * 2.7 from Request\", function () {\r",
							"    pm.expect(responseData.qa_salary_after_12_months).to.eql(req_salary*2.7)\r",
							"});\r",
							"\r",
							"pm.test(\"Qa_salary_after_1.5_year from Response = Salary * 3.3 from Request\", function () {\r",
							"    pm.expect(responseData[\"qa_salary_after_1.5_year\"]).to.eql(req_salary*3.3)\r",
							"});\r",
							"\r",
							"pm.test(\"Qa_salary_after_3.5_years from Response = Salary * 3.8 from Request\", function () {\r",
							"    pm.expect(responseData[\"qa_salary_after_3.5_years\"]).to.eql(req_salary*3.8)\r",
							"});\r",
							"\r",
							"pm.test(\"Person.u_name[1] from Response = Salary from Request\", function () {\r",
							"    pm.expect(responseData.person.u_name[1]).to.eql(req_salary)\r",
							"   });\r",
							"\r",
							"pm.test(\"Person.U_age from Response = Age from Request\", function () {\r",
							"    pm.expect(responseData.person.u_age).to.eql(req_age)\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years from Response = Salary * 4.2 from Request\", function () {\r",
							"    pm.expect(responseData.person.u_salary_5_years).to.eql(req_salary*4.2)\r",
							"});\r",
							"\r",
							"console.log(\"Person parametrs output with a loop\")\r",
							"for  (let key in responseData.person)\r",
							"{console.log(key+ \" = \" +responseData.person[key])};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}